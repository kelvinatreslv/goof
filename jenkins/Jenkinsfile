
def comments_var='empty'
pipeline {
    agent any
    tools {nodejs "nodejs-20.2.0"}


// triggers{
//    GenericTrigger(
//       genericVariables: [
//         [key: 'ref', value: '$.ref']
//         ],
//       causeString: 'Triggered on $ref',
//       token: 'snyk_jira_GenericTrigger_token',
//       printContributedVariables: true,
//       printPostContent: true,
//       silentResponse: false,
//       regexpFilterText: '$ref',
//       regexpFilterExpression: 'refs/heads/' + BRANCH_NAME
//    )
// }

    stages {
        stage('Static code scan') {
          steps {
            echo "${comments_var}"
            echo 'Testing...'
            sh 'pwd'
            echo 'Authorize Snyk CLI'

            withCredentials([string(credentialsId: 'SNYK_TOKEN_SECRET', variable: 'SNYK_TOKEN_SECRET')]) {
              sh 'snyk auth ${SNYK_TOKEN_SECRET}'
            }

            echo 'start snyk code test...'
            // sh snyk code test --json | snyk-to-html -o results.html
            // sh '/opt/jenkins/tools/snyk/snyk-linux code test --json | /opt/jenkins/tools/snyk/snyk-to-html-linux -o results.html'
            // /opt/jenkins/tools/snyk/snyk-linux code test | grep -A 3 'Summary:'

            // catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            //                 sh '/opt/jenkins/tools/snyk/snyk-linux code test --sarif-file-output=results-code.sarif'
            //             }

            recordIssues  tool: sarif(name: 'Snyk Code', id: 'snyk-code', pattern: 'results-code.sarif') 
            // writeFile file: "jenkins_console_output.txt", text: currentBuild.rawBuild.logFile.text   no permission
            sh '/opt/jenkins/tools/snyk/snyk-to-html-linux  -i results-code.sarif -o results.html'
            sh 'cat results.html | grep -A 21 -i "<div class=\"header-wrap\">" > summary.html'            
            sh 'ls -la'
            // echo $COMMENTS
            // COMMENTS= sh 'cat results.html | grep -A 20 -i "snyk code report"'
            // env.comments_var = COMMENTS
            // echo ${env.comments_var}
           script {
               comments_var = readFile('summary2.html')
            }
          echo "${comments_var}"
          }
        }

        stage('Update JIRA') {
            steps {
              script{
               echo "${comments_var}"
               withEnv(['JIRA_SITE=resolve']) {
                def comment = [ body: "${comments_var}" ]
                jiraAddComment idOrKey: 'AUTO-3', input: comment
                }
              }
            }
        }
    }

        // stage('Build') {
        //     steps {
        //         sh 'npm install'
        //     }
        // }

        // stage('Vulnerability Scan') {
        //     steps {
        //     echo  'start snyk test...'
        //     snykSecurity(
        //       snykInstallation: 'snyk@manual',
        //       // snykInstallation: 'snyk@latest',
        //       snykTokenId: 'snyk-api-token-kk',
        //       // place other optional parameters here, for example:
        //     )
        //     }
        // }


        // stage('Deliver') {
        //     steps {
        //         sh './jenkins/scripts/deliver.sh'
        //         input message: 'Finished using the web site? (Click "Proceed" to continue)'
        //         sh './jenkins/scripts/kill.sh'
        //     }
        // }

}
