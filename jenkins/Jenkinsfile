pipeline {
    agent any
    tools {nodejs "nodejs-20.2.0"}


// triggers{
//    GenericTrigger(
//       genericVariables: [
//         [key: 'ref', value: '$.ref']
//         ],
//       causeString: 'Triggered on $ref',
//       token: 'snyk_jira_GenericTrigger_token',
//       printContributedVariables: true,
//       printPostContent: true,
//       silentResponse: false,
//       regexpFilterText: '$ref',
//       regexpFilterExpression: 'refs/heads/' + BRANCH_NAME
//    )
// }




    stages {
        stage('static code scan') {
          steps {
            echo 'Testing...'
            sh 'pwd'
            sh 'ls -la'
            echo 'Authorize Snyk CLI'

            withCredentials([string(credentialsId: 'SNYK_TOKEN_SECRET', variable: 'SNYK_TOKEN_SECRET')]) {
              sh 'snyk auth ${SNYK_TOKEN_SECRET}'
            }


            echo 'start snyk code test...'
            // sh '/opt/jenkins/tools/snyk/snyk-linux code test'
            
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            sh '/opt/jenkins/tools/snyk/snyk-linux code test --sarif-file-output=results-code.sarif'
                        }
            recordIssues  tool: sarif(name: 'Snyk Code', id: 'snyk-code', pattern: 'results-code.sarif')


          }
        }

        stage('add comment to Jira') {
            steps {
               echo "${JIRA_ISSUE_KEY}"
               echo 'uploading report to Jira...'
               sh 'ls -l | grep sarif'

               comment_issues()
            }
        }





void comment_issues() {
    def issue_pattern = "AUTO-\\d+"

    // Find all relevant commit ids
    currentBuild.changeSets.each {changeSet ->
        changeSet.each { commit ->
            String msg = commit.getMsg()
            msg.findAll(issue_pattern).each {
                // Actually post a comment
                id -> jiraAddComment idOrKey: id, comment: 'Hi there!'
            }
        }
    }
}

        // stage('Build') {
        //     steps {
        //         sh 'npm install'
        //     }
        // }

        // stage('Vulnerability Scan') {
        //     steps {
        //     echo  'start snyk test...'
        //     snykSecurity(
        //       snykInstallation: 'snyk@manual',
        //       // snykInstallation: 'snyk@latest',
        //       snykTokenId: 'snyk-api-token-kk',
        //       // place other optional parameters here, for example:
        //     )
        //     }
        // }


        // stage('Deliver') {
        //     steps {
        //         sh './jenkins/scripts/deliver.sh'
        //         input message: 'Finished using the web site? (Click "Proceed" to continue)'
        //         sh './jenkins/scripts/kill.sh'
        //     }
        // }

    }
}
